@page "/AddInvoice/{id}"
@inject IAddInvoiceViewModel _serviceInvoice

<h3>AddInvoiceView</h3>
@if (Customer != null)
{
    <EditForm Model="InvoiceInput" OnValidSubmit="CreateInvoice">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col">
                <label>Company Name:</label>
                <input type="text" @bind="Customer.Company.FirstName" class="form-control">
            </div>
            <div class="col">
                <label>VAT number:</label>
                <input type="text" @bind="InvoiceInput.VatNumber" class="form-control" placeholder="BEOxxxxxx">
            </div>
        </div>
        <div class="row">
            @if (CustomerAddress.StreetName == "Open this select menu")
            {
                <div class="col">
                    <label>Street Name:</label>
                    <select @bind="CustomerAddress.StreetName" class="form-select">
                        @foreach (CustomerAddressResponse adress in Customer.Addresses)
                        {
                            <option value="@adress.StreetName">@adress</option>
                        }
                    </select>
                </div>
            }
            else
            {
                <div class="col">
                    <label>Street Name:</label>
                    <input type="text" @bind="CustomerAddress.StreetName" class="form-control">
                </div>
                <div class="col">
                    <label>Number:</label>
                    <input type="text" @bind="CustomerAddress.HouseNumber" class="form-control">
                </div>
            }
        </div>

        <div class="row">
            <div class="col">
                <label>Description</label>
            </div>
            <div class="col">
                <label>Quantity</label>
            </div>
            <div class="col">
                <label>Price per unit</label>
            </div>
            <div class="col">
                <label>VAT</label>
            </div>
            <div class="col">
            </div>
        </div>

        @foreach (CreateInvoiceLine invoiceLine in InvoiceInput.InvoiceLines)
        {
            <div class="row">
                <div class="col">
                    <input type="text" @bind="invoiceLine.Description" class="form-control">
                </div>
                <div class="col">
                    <input type="number" @bind="invoiceLine.Quantity" class="form-control">
                </div>
                <div class="col">
                    <input type="number" @bind="invoiceLine.PricePerUnit" class="form-control">
                </div>
                <div class="col">
                    <input type="number" @bind="invoiceLine.VATRate" class="form-control">
                </div>
                <div class="col">
                </div>
            </div>
        }

        <div class="row">
            <div class="col">
                <input type="text" @bind="InvoiceLine.Description" class="form-control">
            </div>
            <div class="col">
                <input type="number" @bind="InvoiceLine.Quantity" class="form-control">
            </div>
            <div class="col">
                <input type="number" @bind="InvoiceLine.PricePerUnit" class="form-control">
            </div>
            <div class="col">
                <input type="number" @bind="InvoiceLine.VATRate" class="form-control">
            </div>
            <div class="col">
                <button type="button" class="btn btn-secondary" @onclick="AddInvoiceLine" data-toggle="button" aria-pressed="false" autocomplete="off">
                    Add invoice line
                </button>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Save invoice</button>
            </div>
        </div>
    </EditForm>
}
@code {
    private CustomerDetailResponse _customer;
    private CustomerAddressResponse _address = new CustomerAddressResponse { StreetName = "Open this select menu" };

    [Parameter]
    public string Id { get; set; }

    public CreateInvoiceInput InvoiceInput { get; set; } = new();

    [Parameter]
    public CustomerDetailResponse Customer
    {
        get { return _customer; }
        set
        {
            _customer = value;
            StateHasChanged();
        }
    }
    public CreateInvoiceLine InvoiceLine { get; set; } = new();

    public CustomerAddressResponse CustomerAddress
    {
        get { return _address; }
        set
        {
            _address = value;
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    protected override async Task OnParametersSetAsync()
    {
        base.OnParametersSetAsync();

        Customer = await _serviceInvoice.GetCustomerAsync(Id);
    }

    public async Task CreateInvoice()
    {
        CustomerDetailResponse customerDetail = await _serviceInvoice.CreateInvoiceAsync(InvoiceInput);
    }

    private void AddInvoiceLine()
    {
        InvoiceInput.InvoiceLines.Add(InvoiceLine);
        InvoiceLine = new();
        StateHasChanged();
    }
}