@page "/"
@rendermode InteractiveServer

@inject ICustomerViewModel _serviceCustomer
@inject NavigationManager navMng

<PageTitle>CustomerView</PageTitle>

@if (_serviceCustomer.ListCustomers == null)
{
    <p>Fetching customers...</p>
    <div class="spinner-border" role="status">
    </div>

}
else
{
    <h1>CustomerView</h1>
    <div>
        <select @bind="Id" class="form-select">
            <option selected>Open this select menu</option>
            @foreach (CustomerResponse customer in _serviceCustomer.ListCustomers)
            {
                <option value="@customer.Id">@customer.FirstName @customer.FamilyName</option>
            }
        </select>
    </div>
}

@if (Customer != null)
{
    <EditForm Model="Customer" OnValidSubmit="AddInvoice">
        <DataAnnotationsValidator />

        <div class="form-group pt-1">
            <label>Family name</label>
            <input type="text" @bind="Customer.FamilyName" class="form-control" />
        </div>

        <div class="form-group pt-1">
            <label>First name</label>
            <input type="text" @bind="Customer.FirstName" class="form-control" />
        </div>

        <div class="form-group pt-1">
            <label>Gender</label>
            <input type="text" @bind="Customer.Gender" class="form-control" />
        </div>

        <div class="form-group pt-2">
            <button type="submit" class="btn btn-primary">Add invoice</button>
        </div>

    </EditForm>
}

@code {

    private CustomerResponse _customer;

    [Parameter]
    public CustomerResponse Customer
    {
        get { return _customer; }
        set
        {
            _customer = value;
            StateHasChanged();
        }
    }

    private Guid _id;

    public Guid Id
    {
        get { return _id; }
        set
        {
            _id = value;
            Customer = _serviceCustomer.ListCustomers.Single(c => c.Id == Id);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Loading CustomerView");
        await base.OnInitializedAsync();

        await _serviceCustomer.GetCustomersAsync();
    }

    private void AddInvoice()
    {
        this.navMng.NavigateTo($"/AddInvoice/{Id}");
    }
}

